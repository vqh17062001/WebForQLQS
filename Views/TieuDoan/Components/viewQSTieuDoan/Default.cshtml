@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    var donvi = ViewData["ttDonVi"] as List<QuannhanDonvi>;
    var chucvu = ViewData["ttChucVu"] as List<QuannhanChucvu>;

    var numofpage = 10;

    var numofgroup = ((Model.TotalItems / Model.PageSize) + 1) / numofpage ;

    

    // trang nay de cho viewQSDonVi
}




@model PagedViewModel<WebForQLQS.Models.QuanNhan>;
<div class="content-wrapper" style="min-height: 30000px;">

    <section class="content">

        <div class="card-header">
            <h3 class="card-title">HỌC VIỆN KỸ THUẬT QUÂN SỰ - TIỂU ĐOÀN 1 - @Model.TotalItems Quân nhân </h3>

            <div class="card-tools" style="width: 250px">
                <div class="input-group input-group-sm" style="width: 300px;">

                    <form method="post" action="table_searchButtonClick">

                        <div class="input-group-append">
                            <input type="text" name="table_search" id="table_search" class="form-control float-right" placeholder="tên, cấp bậc hoặc đơn vị ">




                            <button class="btn btn-default" type="submit">
                                <i class="fas fa-search"></i>
                            </button>



                        </div>

                    </form>
                </div>
            </div>
        </div>

        <!-- /.card-header -->



        <div class="card-body p-0">
            <table class="table table-striped">

                <h4 class="text-danger"> @ViewData["mess"] </h4>
                <thead>
                    <tr>


                        <th style="width: 10px">MÃ QN</th>
                        <th style="width: 290px"> HỌ TÊN </th>
                        <th style="width: 100px"> CHỨC VỤ </th>
                        <th style="width: 100px"> ĐƠN VỊ </th>

                        <th style="width: 130px"> <div style="color:lightgreen" id="real-time-clock"></div> </th>
                        <th style="width: 40px">Trang </th>
                        <th style="width: 40px"> @Model.CurrentPage/@(Model.TotalItems / Model.PageSize + 1)</th>

                    </tr>
                </thead>
                <tbody>


                    @foreach (var quannhan in Model.Items)
                    {
                        <tr>
                            <td>@quannhan.MaQuanNhan</td>
                            <td>@quannhan.HoTen</td>

                            @foreach (var item in chucvu)
                            {
                                if (item.MaQuanNhan == quannhan.MaQuanNhan)
                                {
                                    <td>@item.MaChucVu</td>
                                }

                            }


                            @foreach (var item in donvi)
                            {
                                if (item.MaQuanNhan == quannhan.MaQuanNhan)
                                {
                                    <td>@item.MaDonVi</td>
                                }

                            }
                            <td><a class=" btn btn-primary" href="@Url.Action("BaovangQNd", new { id = quannhan.MaQuanNhan })">Báo vắng</a></td>
                            <td><a class=" btn btn-primary" href="@Url.Action("ChangeQNd", new { id = quannhan.MaQuanNhan })">Sửa</a></td>
                            <td><a class=" btn btn-danger" href="@Url.Action("DeleteQNd", new { id = quannhan.MaQuanNhan })">Xóa</a></td>
                        </tr>
                    }



                </tbody>
            </table>

           

            <div class="pagination">
                @if (Model.CurrentPage == ((Model.TotalItems / Model.PageSize) + 1)) { PagedViewModel<QuanNhan>.currencegroup = numofgroup; }
              
                

                @if (((Model.TotalItems / Model.PageSize) + 1) < numofpage)
                {
                    for (int i = 1; i <= (Model.TotalItems / Model.PageSize) + 1; i++)
                    {
                        <a class="nav-link btn-secondary  " href="@Url.Action("viewTieuDoan", new { page = i })">@i</a>


                    }



                }
                else
                {

                    if (PagedViewModel<QuanNhan>.currencegroup <= numofgroup && PagedViewModel<QuanNhan>.currencegroup >=0)
                    {
                        if (PagedViewModel<QuanNhan>.currencegroup!=0){
                       <a class="nav-link btn-secondary  " href="/TieuDoan/changecurrencegroup/-1"> previous </a>  
                        }
                    for (int i = 1; i <= numofpage; i++)
                    {
                            if ((PagedViewModel<QuanNhan>.currencegroup * numofpage + i) <= ((Model.TotalItems / Model.PageSize) + 1)){
                            <a class="nav-link btn-secondary  " href="@Url.Action("viewTieuDoan", new { page = (PagedViewModel<QuanNhan>.currencegroup*numofpage+i) })">@(PagedViewModel < QuanNhan > .currencegroup * numofpage + i)</a>
                            }

                    }

                        if (PagedViewModel<QuanNhan>.currencegroup != numofgroup){
                         <a class="nav-link btn-secondary  " href="/TieuDoan/changecurrencegroup/1" > next </a > 
                        }
                    }
                    else if (PagedViewModel<QuanNhan>.currencegroup<0)


                    { PagedViewModel<QuanNhan>.currencegroup = numofgroup; }

                }
               

                <a class="nav-link btn-dark" href="@Url.Action("viewTieuDoan", new { page = (Model.TotalItems / Model.PageSize) + 1 })">  last(@((Model.TotalItems / Model.PageSize) + 1))   </a> <span class="text-danger nav-link">@Model.CurrentPage/@(Model.TotalItems / Model.PageSize + 1)</span>
                 
            </div>



        </div>
        <!-- /.card-body -->


    </section>
</div>







<script type="text/javascript">
    function updateClock() {
        var now = new Date();
        var hours = now.getHours();
        var minutes = now.getMinutes();
        var seconds = now.getSeconds();
        var timeString = hours + ':' + (minutes < 10 ? '0' : '') + minutes + ':' + (seconds < 10 ? '0' : '') + seconds;
        document.getElementById('real-time-clock').innerHTML = timeString;
    }

    // Cập nhật đồng hồ mỗi giây
    setInterval(updateClock, 1000);
</script>
